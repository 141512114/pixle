name: NodeJS with Gulp

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    # The following lines will Cache the npm modules when running the test  
    # so the actions will be faster
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install necessary packages
      run: |
        sudo apt-get install g++ build-essential
        npm install -g node-gyp
        npm i --legacy-peer-deps

    - name: Clear npm cache and verify its integrity
      run: |
          npm run cleanup

    - name: Create a pixle database and clean up the cache and any artifacts
      run: |
          gulp combined
          npm run pixles

    - name: Generate the pixle game stylesheets
      run: gulp pixle-game-compress

    # - name: Run build pixle-game command
    #   run: npm run build pixle-game

    - name: Generate the pixle landing stylesheets
      run: gulp pixle-landing-compress
        
    # - name: Run build:ssr command
    #   run: npm run build:ssr
