@use "sass:map";

// Default
.locked {
  user-select: none !important;
  pointer-events: none !important;
  cursor: default !important;

  &:hover,
  &:focus,
  &:active {
    cursor: default !important;
  }
}

@mixin highlight_btn_mixin() {
  .highlight-btn {
    &:not(.locked) {
      &:hover,
      &:active {
        cursor: pointer;
        color: var(--default-theme-two, map.get($default-color-palette, 2));
        background-color: var(--default-theme-six, map.get($default-color-palette, 6));
      }
    }

    &--grid-element:not(.locked) {
      &:hover,
      &:active {
        cursor: pointer;
        background-color: var(--default-theme-three, map.get($default-color-palette, 3));

        &[data-grid-element-status="2"] {
          background-color: rgba(map.get($status-palette, 2), $background-color-alpha-focused);
        }

        &[data-grid-element-status="1"] {
          background-color: rgba(map.get($status-palette, 3), $background-color-alpha-focused);
        }
      }
    }
  }
}

@media (hover: hover) and (pointer: fine) {
  @include highlight_btn_mixin;
}

.selected {
  background-color: var(--default-theme-six) !important;
}

// Effects
.flip-element {
  position: relative;
  transform-style: preserve-3d;
  transition: transform 850ms;

  .front-face,
  .back-face {
    position: relative;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    transform-style: preserve-3d;
    z-index: 20;
  }

  .back-face {
    position: absolute;
    transform: rotateX(180deg);
    z-index: 30;
  }

  &.do-flip {
    transform: rotateX(-180deg);

    .front-face {
      user-select: none;
      pointer-events: none;
    }
  }
}
