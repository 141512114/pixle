@use "sass:map";

@import '../mixins/themes';
@import '../mixins/variables';
@import '../mixins/mixins';

// pix-grid-element component stylesheet
div.component-pix-grid-element,
div.grid-element-inner {
  width: 100%;
  height: 100%;
}

svg.square-placeholder {
  width: 100%;
  height: auto;
}

div.grid-element-inner {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--default-theme-four, map.get($default-color-palette, 4));
  transition: transform 550ms, background-color 150ms;

  &[data-grid-element-status="solved"] {
    @include background-color(1, $status-palette, $background-color-alpha-focused);
  }

  &[data-grid-element-status="2"] {
    @include background-color(2, $status-palette, $background-color-alpha-unfocused);
  }

  &[data-grid-element-status="1"] {
    @include background-color(3, $status-palette, $background-color-alpha-unfocused);
  }

  &[data-grid-element-status="failed"] {
    @include background-color(4, $status-palette, $background-color-alpha-focused);
  }

  div {
    width: 100%;
    height: 100%;
    @include vertical-align(middle);
  }

  p.emoji {
    display: inline-block;
    width: 100%;
    text-align: center;
    user-select: none;
    pointer-events: none;
  }

  &:not(.locked):hover {
    cursor: pointer;

    &:not(.selected) {
      background-color: var(--default-theme-three, map.get($default-color-palette, 3));
    }

    &.invert-before {
      background-color: var(--default-theme-six, map.get($default-color-palette, 6));
    }

    &[data-grid-element-status="2"] {
      @include background-color(2, $status-palette, $background-color-alpha-focused);
    }

    &[data-grid-element-status="1"] {
      @include background-color(3, $status-palette, $background-color-alpha-focused);
    }
  }
}
